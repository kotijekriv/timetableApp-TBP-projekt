{"ast":null,"code":"import * as actionType from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getEvents = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getEvents();\n    dispatch({\n      type: actionType.GET_EVENTS,\n      payload: data\n    });\n  } catch (error) {\n    alert(error.response.data.message);\n  }\n};\nexport const createEvent = (formData, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createEvent(formData);\n    dispatch({\n      type: actionType.CREATE_EVENT,\n      payload: data\n    });\n    navigate('/');\n  } catch (error) {\n    alert(error.response.data.message);\n  }\n};\nexport const editEvent = (formData, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.editEvent(formData);\n    dispatch({\n      type: actionType.EDIT_EVENT,\n      payload: data\n    });\n    navigate('/');\n  } catch (error) {\n    alert(error.response.data.message);\n  }\n};\nexport const deleteEvent = (eventId, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.deleteEvent(eventId);\n    dispatch({\n      type: actionType.DELETE_EVENT,\n      payload: data\n    });\n  } catch (error) {\n    alert(error.response.data.message);\n  }\n};","map":{"version":3,"sources":["/Users/pradic/Documents/timetableApp/client/src/actions/events.js"],"names":["actionType","api","getEvents","dispatch","data","type","GET_EVENTS","payload","error","alert","response","message","createEvent","formData","navigate","CREATE_EVENT","editEvent","EDIT_EVENT","deleteEvent","eventId","DELETE_EVENT"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,0BAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC/C,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACC,SAAJ,EAAvB;AAEAC,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEL,UAAU,CAACM,UAAnB;AAA+BC,MAAAA,OAAO,EAAEH;AAAxC,KAAD,CAAR;AACH,GAJD,CAIE,OAAOI,KAAP,EAAc;AACZC,IAAAA,KAAK,CAACD,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAArB,CAAL;AACH;AACJ,CARM;AAUP,OAAO,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB,MAAOX,QAAP,IAAoB;AACnE,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACW,WAAJ,CAAgBC,QAAhB,CAAvB;AAEAV,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEL,UAAU,CAACe,YAAnB;AAAiCR,MAAAA,OAAO,EAAEH;AAA1C,KAAD,CAAR;AAEAU,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACH,GAND,CAME,OAAON,KAAP,EAAc;AACZC,IAAAA,KAAK,CAACD,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAArB,CAAL;AACH;AACJ,CAVM;AAYP,OAAO,MAAMK,SAAS,GAAG,CAACH,QAAD,EAAWC,QAAX,KAAwB,MAAOX,QAAP,IAAoB;AACjE,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACe,SAAJ,CAAcH,QAAd,CAAvB;AAEAV,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEL,UAAU,CAACiB,UAAnB;AAA+BV,MAAAA,OAAO,EAAEH;AAAxC,KAAD,CAAR;AAEAU,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACH,GAND,CAME,OAAON,KAAP,EAAc;AACZC,IAAAA,KAAK,CAACD,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAArB,CAAL;AACH;AACJ,CAVM;AAYP,OAAO,MAAMO,WAAW,GAAG,CAACC,OAAD,EAAUL,QAAV,KAAuB,MAAOX,QAAP,IAAoB;AAClE,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACiB,WAAJ,CAAgBC,OAAhB,CAAvB;AAEAhB,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEL,UAAU,CAACoB,YAAnB;AAAiCb,MAAAA,OAAO,EAAEH;AAA1C,KAAD,CAAR;AACH,GAJD,CAIE,OAAOI,KAAP,EAAc;AACZC,IAAAA,KAAK,CAACD,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAArB,CAAL;AACH;AACJ,CARM","sourcesContent":["import * as actionType from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\nexport const getEvents = () => async (dispatch) => {\n    try {\n        const { data } = await api.getEvents();\n\n        dispatch({ type: actionType.GET_EVENTS, payload: data });\n    } catch (error) {\n        alert(error.response.data.message);\n    }\n}\n\nexport const createEvent = (formData, navigate) => async (dispatch) => {\n    try {\n        const { data } = await api.createEvent(formData);\n\n        dispatch({ type: actionType.CREATE_EVENT, payload: data });\n\n        navigate('/');\n    } catch (error) {\n        alert(error.response.data.message);\n    }\n}\n\nexport const editEvent = (formData, navigate) => async (dispatch) => {\n    try {\n        const { data } = await api.editEvent(formData);\n\n        dispatch({ type: actionType.EDIT_EVENT, payload: data });\n\n        navigate('/');\n    } catch (error) {\n        alert(error.response.data.message);\n    }\n}\n\nexport const deleteEvent = (eventId, navigate) => async (dispatch) => {\n    try {\n        const { data } = await api.deleteEvent(eventId);\n\n        dispatch({ type: actionType.DELETE_EVENT, payload: data });\n    } catch (error) {\n        alert(error.response.data.message);\n    }\n}"]},"metadata":{},"sourceType":"module"}
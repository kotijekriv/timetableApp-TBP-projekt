{"ast":null,"code":"import * as actionType from '../constants/actionTypes';\nexport default (function () {\n  let events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionType.GET_EVENTS:\n    case actionType.GET_EVENT:\n      return action.payload;\n\n    case actionType.CREATE_EVENT:\n      return [...events, action.payload];\n\n    case actionType.DELETE_EVENT:\n      return events.filter(event => event.eventId !== action.payload.id);\n\n    case actionType.EDIT_EVENT:\n      return events.map(event => event.eventId === action.payload.id ? action.payload : event);\n\n    default:\n      return events;\n  }\n});","map":{"version":3,"sources":["/Users/pradic/Documents/timetableApp/client/src/reducers/events.js"],"names":["actionType","events","action","type","GET_EVENTS","GET_EVENT","payload","CREATE_EVENT","DELETE_EVENT","filter","event","eventId","id","EDIT_EVENT","map"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,0BAA5B;AAEA,gBAAe,YAAyB;AAAA,MAAxBC,MAAwB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKH,UAAU,CAACI,UAAhB;AACA,SAAKJ,UAAU,CAACK,SAAhB;AACI,aAAOH,MAAM,CAACI,OAAd;;AACJ,SAAKN,UAAU,CAACO,YAAhB;AACI,aAAO,CAAC,GAAGN,MAAJ,EAAYC,MAAM,CAACI,OAAnB,CAAP;;AACJ,SAAKN,UAAU,CAACQ,YAAhB;AACI,aAAOP,MAAM,CAACQ,MAAP,CAAeC,KAAD,IAAWA,KAAK,CAACC,OAAN,KAAkBT,MAAM,CAACI,OAAP,CAAeM,EAA1D,CAAP;;AACJ,SAAKZ,UAAU,CAACa,UAAhB;AACI,aAAOZ,MAAM,CAACa,GAAP,CAAYJ,KAAD,IAAYA,KAAK,CAACC,OAAN,KAAkBT,MAAM,CAACI,OAAP,CAAeM,EAAjC,GAAsCV,MAAM,CAACI,OAA7C,GAAuDI,KAA9E,CAAP;;AACJ;AACI,aAAOT,MAAP;AAXR;AAaH,CAdD","sourcesContent":["import * as actionType from '../constants/actionTypes';\n\nexport default (events = [], action) => {\n    switch (action.type) {\n        case actionType.GET_EVENTS:\n        case actionType.GET_EVENT:\n            return action.payload;\n        case actionType.CREATE_EVENT:\n            return [...events, action.payload];\n        case actionType.DELETE_EVENT:\n            return events.filter((event) => event.eventId !== action.payload.id);\n        case actionType.EDIT_EVENT:\n            return events.map((event) => (event.eventId === action.payload.id ? action.payload : event));\n        default:\n            return events;\n    }\n};"]},"metadata":{},"sourceType":"module"}